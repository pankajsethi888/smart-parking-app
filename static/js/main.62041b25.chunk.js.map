{"version":3,"sources":["components/draw.js","camera.js","DistanceSensor.js","Navbar.js","SQLdb.js","Home.js","App.js","reportWebVitals.js","index.js"],"names":["DrawRect","detections","ctx","forEach","prediction","x","y","width","height","text","align","strokeStyle","font","weight","fillStyle","beginPath","fillText","rect","stroke","Camera","webcamRef","useRef","canvasRef","runCoco","a","cocossd","net","setInterval","detect","current","video","readyState","videoWidth","videoHeight","obj","console","log","getContext","useEffect","className","ref","muted","style","postion","marginLeft","marginRight","left","right","textAlign","zindex","position","DistanceSensor","src","frameBorder","marginWidth","marginHeight","scrolling","React","Component","Navbar","to","SQLdb","useState","number","setNumber","parkedCarList","setParkedCarList","history","useHistory","Axios","get","then","response","data","type","name","onChange","e","target","value","onClick","post","carNumber","timeOfPark","Date","toISOString","slice","replace","map","val","delete","go","deleteReview","Home","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.62041b25.chunk.js","sourcesContent":["const DrawRect = (detections, ctx) => {\n  detections.forEach((prediction) => {\n    // extract prediction result\n    const [x, y, width, height] = prediction[\"bbox\"];\n    const text = prediction[\"class\"];\n\n    const color = \"red\";\n    ctx.align = \"center\";\n    ctx.strokeStyle = color;\n    ctx.font = \"22px Arial\";\n    ctx.weight = \"bold\";\n    ctx.fillStyle = color;\n\n    // Draw Rectangle on canvas\n    ctx.beginPath();\n    ctx.fillText(text, x, y);\n    ctx.rect(x, y, width, height);\n    ctx.stroke();\n  });\n};\n\nexport default DrawRect;\n","import React, { useRef, useEffect } from \"react\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as cocossd from \"@tensorflow-models/coco-ssd\"; // Tenserflow model\nimport Webcam from \"react-webcam\";\n// import \"./camera.css\";\nimport DrawRect from \"./components/draw\";\n\nfunction Camera() {\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  const runCoco = async () => {\n    const net = await cocossd.load();\n    setInterval(() => {\n      //  cocossd.ObjectDetection()\n      detect(net);\n    }, 10);\n  };\n\n  const detect = async (net) => {\n    if (\n      typeof webcamRef.current !== \"undefined\" &&\n      webcamRef.current !== null &&\n      webcamRef.current.video.readyState === 4\n    ) {\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight;\n\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight;\n\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight;\n\n      // Make Detection\n      const obj = await net.detect(video);\n      console.log(obj);\n\n      const ctx = canvasRef.current.getContext(\"2d\");\n\n      DrawRect(obj, ctx);\n    }\n  };\n\n  useEffect(() => {\n    runCoco();\n  }); //\n\n  return (\n    <div className=\"camera-shot\">\n      <h1>Object Detection</h1>\n      <header className=\"camera-header\">\n        <p>NOTE: Please allow this program to access your webcam.</p>\n        <Webcam\n          ref={webcamRef}\n          muted={true}\n          style={{\n            postion: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 9,\n            width: 640,\n            height: 480,\n          }}\n        />\n        <canvas\n          ref={canvasRef}\n          style={{\n            position: \"absolute\",\n\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 8,\n            width: 640,\n            height: 480,\n          }}\n        />\n      </header>\n    </div>\n  );\n}\n\nexport default Camera;\n","import React from \"react\";\n\nclass DistanceSensor extends React.Component {\n  render() {\n    return (\n      <div className=\"dist-sense\">\n        <h1>Demonstration of Vehicle Proximity Measurement</h1>\n        <h2>Setps to Follow:</h2>\n        <ol>\n          <li>Click on Code Icon</li>\n          <li>\n            Look for Serial Monitor in the lower right corner and click it\n          </li>\n          <li>Click and start Simulation</li>\n          <li>\n            Drag the gree dot and see the live update of distance sensor reading\n          </li>\n        </ol>\n        <iframe\n          width=\"1500\"\n          height=\"675\"\n          src=\"https://www.tinkercad.com/embed/kaHbryT767O?editbtn=1\"\n          frameBorder=\"0\"\n          marginWidth=\"0\"\n          marginHeight=\"0\"\n          scrolling=\"no\"\n        ></iframe>\n      </div>\n    );\n  }\n}\n\nexport default DistanceSensor;\n","import { Link } from \"react-router-dom\";\n\nconst Navbar = () => {\n  return (\n    <div className=\"navbar\">\n      <h1>Smart Parking Demo</h1>\n      <div className=\"nav-menue\">\n        <Link to=\"/\" className=\"nav-hover-item\">\n          Home\n        </Link>\n        <Link to=\"/distance\" className=\"nav-hover-item\">\n          Distance Sensor\n        </Link>\n        <Link to=\"/camera\" className=\"nav-hover-item\">\n          Object Detection\n        </Link>\n        <Link to=\"/car-records\" className=\"nav-hover-item\">\n          Vehicle Records\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React, { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\n\nconst SQLdb = () => {\n  const [number, setNumber] = useState(\"\");\n  const [parkedCarList, setParkedCarList] = useState([]);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/api/get\").then((response) => {\n      setParkedCarList(response.data);\n    });\n  }, [parkedCarList]);\n\n  const submitReview = () => {\n    Axios.post(\"http://localhost:3001/api/insert\", {\n      carNumber: number,\n      timeOfPark: new Date().toISOString().slice(0, 19).replace(\"T\", \" \"),\n    }).then(() => {\n      setParkedCarList([...parkedCarList, { carNumber: number }]);\n    });\n  };\n\n  const deleteReview = (number) => {\n    Axios.delete(`http://localhost:3001/api/delete/${number}`);\n    history.go(0);\n  };\n\n  return (\n    <div className=\"sqldb\">\n      <div className=\"form\">\n        <label>\n          <h2>Vehicle Number:</h2>\n        </label>\n        <input\n          type=\"text\"\n          name=\"carNumber\"\n          onChange={(e) => setNumber(e.target.value)}\n        ></input>\n\n        <button className=\"submit-button\" onClick={submitReview}>\n          Submit\n        </button>\n        {parkedCarList.map((val) => {\n          return (\n            <div className=\"plate\">\n              <p>\n                {val.carNumber} | ({val.timeOfPark})\n              </p>\n              <button\n                onClick={() => {\n                  deleteReview(val.carNumber);\n                }}\n              >\n                Delete\n              </button>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default SQLdb;\n","const Home = () => {\n  return (\n    <div className=\"home-page\">\n      <h1>Use of IoT in Traffic System</h1>\n      <article>\n        The internet of things (IoT) is a simple way to communicate with all the\n        related devices. There are so many smart devices available in the market\n        right now, and almost all of these can be connected with one another\n        using IoT technology. This WebApp is an honest try to demonstrate some\n        application of IoT in the real world traffic scenario.\n      </article>\n\n      <article>\n        <h2>\n          <i>Scenario:</i>\n        </h2>\n        <p>\n          <i>\n            We will consider a car parking scenario. In this scenario, there is\n            a requirement of an IoT system that detects an arriving car, open\n            gate(/entrance), and then record their number plate value from via\n            Image Processing in Real-time.\n          </i>\n        </p>\n      </article>\n\n      <article>\n        You can switch through all the tabs via the navigator(top frame/bar)\n        where the solution of the given scenario is been entertained one by one.\n        Briefly, the functionality of these 4 tabs are as follows:\n        <ol>\n          <li>Home</li>\n          <li>Proximity sensing</li>\n          <li>Object Detection</li>\n          <li>Vehicle Record</li>\n        </ol>\n      </article>\n\n      <ol>\n        <article>\n          <li className=\"main-pt\">\n            <h2>Home</h2>\n          </li>\n          <p>\n            This is the current page that you are viewing. Contains Scenario and\n            description of the Web Application.\n          </p>\n        </article>\n\n        <article>\n          <li className=\"main-pt\">\n            <h2>Proximity Sensing</h2>\n          </li>\n          <p>\n            Here you will find an Embedded system simulation. Any problem\n            related to the Traffic system is unachievable without any use of\n            proximity sensing. For solving a traffic-related problem the primary\n            state the requirement is the position of a vehicle or object on the\n            road.\n          </p>\n          <p>\n            With the help of <u>TikerCAD</u>, we have designed a basic distance\n            sensory system. The designed model is then embedded into this\n            web-page that will provide you with a convenient way to observe the\n            working of the proximity sensor.\n          </p>\n        </article>\n        <article>\n          <li className=\"main-pt\">\n            <h2>Object Detection</h2>\n          </li>\n          <p>\n            Apart from just knowing the position, the system requires\n            distinguishing and identifying the object. For this problem, One\n            takes the help of Computer Vision.\n          </p>\n          <p>\n            Here we are taking live images from your webcam and applying\n            <u> TensorFlow Coco-ssd model</u> which is an Object Detection\n            Model. This model is trained to identify up to 80 different objects,\n            many of which can also be witnessed in general traffic, such as\n            cars, bicycle, motorbike, truck, bus, person, etc. This demonstrates\n            the how we can take the help of CV in various problems like counting\n            number of vehicles passed in a certain period, Traffic jams,\n            collisions, pedestrians walking, accidents, etc.\n          </p>\n        </article>\n        <article>\n          <li className=\"main-pt\">\n            <h2>Vehicles Records</h2>\n          </li>\n          <p>\n            After tackling with first two problems, the final task remains is to\n            Store the Vehicles Details into a DataBase. Here the records are\n            being stored into <u>mySQL</u> server by using express Nodejs.\n            Through this WebApp, you are free to enter new inputs of Vehicle\n            numbers that will get stored along with the date and time value to\n            the server. WebApp also provides you the access to delete selected\n            records from the database.\n          </p>\n        </article>\n      </ol>\n    </div>\n  );\n};\n\nexport default Home;\n","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Camera from \"./camera\";\nimport DistanceSensor from \"./DistanceSensor\";\nimport Navbar from \"./Navbar\";\n// import \"./App.css\";\nimport SQLdb from \"./SQLdb\";\nimport Home from \"./Home\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route exact path=\"/distance\">\n            <DistanceSensor />\n          </Route>\n          <Route exact path=\"/camera\">\n            <Camera />\n          </Route>\n          <Route exact path=\"/car-records\">\n            <SQLdb />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}